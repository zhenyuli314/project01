一、java面向对象学习的三条主线：
1.java类及类的成员：属性、方法、构造器；代码块、内部类
2.面向对象的三大特征：封装、继承、多态
3.其他关键字：this\supper\static\final\ abstract\interface\package\import

面向过程：强调的是功能行为，以函数为最小单位，考虑怎么做
面向对象:强调具备了功能的对象，以类/对象为最小单位，考虑谁来做

二、谈谈你对面向对象中类和对象的理解，并指出二者的关系？
类：抽象的、概念上的内容
对象：实实在在存在的一个个体，对象是由类派生出来的。
三、面向对象思想的体现一：类和对象的创建和执行操作有哪三步？
①创建类
②类的实例化
③调用对象的结构："对象.属性”对象方法
5.类的方法内是否可以定义变量？是否可以调用属性？是否可以定义方法？是否可以调用方法？
是；是；否；是
6.
类：对类事物的描述，是抽象的、概念上的定义
对象：是实际存在的该类事物的每个个体，因而也称为实例（ instance）
>面向对象程序设计的重点是类的设计
>设计类，就是设计类的成员。

7.属性=成员变量= field=域、字段
  *方法=成员方法=函数= method
  *创建类的对象=类的实例化=实例化类

***************************************************************************

一、理解"万事万物皆对象”
1.在ava语言范畴中，我们都将功能、结构等封装到英中，通过类的实例化，来调用具体的功能结构I
2.涉及到Java语言与前端Htm1、后端的数据库交互时，前后端的结构在Java层面交互时，都体现为类、对象。

二、内存解析的说明
1.引用类型的变量，只可能存储两类值：nu11或地址值（含变量的类型）

三、匿名对象的使用
1.理解：我们创建的对象，没有显式的赋给一个变量名。即为匿名对象
2.特征：匿名对象只能调用一次
3.使用：如下

***************************************************************************

方法的重载（over1oad） loading
1.定义：在同一个类中，允许存在一个以上的同名方法，只要它们的参数个数或者参数类型不同即可。
两同一不同"：同一个类、相同方法名参数列表不同：参数个数不同，参数类型不同
2.举例Arrays类中重载的sort（）/ binarysearch（）
3，判断是否是重载：
跟方法的权限修饰符、返回值类型、形参变量名、方法体都没有关系！
4.在通过对象调用方法时，如何确定某一个指定的方法：
方法名--->参数列表

1.jdk5.8新增的内容
2.具体使用
    2.1可变个数形参的格式：数据类型 ... 变量名
    2.2当调用可变个数形参的方法时，传入的参数个数可以是：8个，1个，2个，。。。
    2.3可变个数形参的方法与本类中方法名相同，形参不同的方法之间构成重载
    2.4可变个数形参的方法与本类中方法名相同，形参类型也相同的数组之间不构成重载。换句话说，二者不能共存
    2.5可变个数形参在方法的形参中，必须声明在末尾
    2.6可变个数形参在方法的形参中，最多只能声明一个可变形参。

***************************************************************************

/*
* 关于变量的赋值：
* 如果变量是基本数据类型,此时赋值的是变量所保存的值
* 如果变量是引用数据类型，此时赋值的是变量所保存数据的地址值
*
* 方法的形参的传递机制：值传递
*   形参：方法定义时，声明的小括号内的参数
*   实参：方法调用时，实际传递给形参的数据
*
*   值传递机制：
*       如果参数时基本数据类型，此时实参赋给形参的是实参真实存储的数据值
*       如果参数是引用数据类型，此时实参赋给形参的是实参存储数据的地址值。
* */