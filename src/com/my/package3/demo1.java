package com.my.package3;

/*
 * 类中属性的使用
 * 属性（成员变量） vs 局部变量
 * 1.相同点：
 *       1.1定义变量的格式相同：数据类型 变量名 = 变量值
 *       1.2先声明，后使用
 *       1.3变量都有其对应的作用域
 * 2.不同点：
 *       2.1在类中声明的位置不同
 *           属性：直接定义在类的一对{}内
 *           局部变量：声明在方法内、方法形参、代码块内、构造器形参、构造器内部的变量
 *
 *       2.2关于权限修饰符的不同
 *           属性：可以在声明属性时，指明其权限，使用权限修饰符。
 *           常用的权限修饰符：private\public\protected\缺省 ==》封装性
 *           目前大家声明时，使用缺省。
 *
 *       2.3默认初始化值
 *           属性：类的属性根据其类型，都有默认初始化值
 *               整形（byte\short\int\long）:0
 *               浮点型（float\double）:0.0
 *               字符型（char）：0
 *               布尔型：false
 *
 *               引用数据类型：null
 *
 *           局部变量：没有默认初始化值。
 *               意味着：调用局部变量之前，一定要显式赋值。
 *                   特别的：形参在调用时，我们赋值即可。
 *       2.4在内存的加载位置不同
 *              属性：加载到堆空间中（非static）
 *              局部变量：加载到栈空间
 *
 * 类中方法的声明和使用
 *
 * 方法：描述类应有的功能。
 *
 * 1.举例：
 *   public void eat(){}
 *    public void sleep(int hour){}
 *    public String getName(){}
 *    public String getNation(String nation){}
 *2.方法的声明：权限修饰符 返回值类型 方法名（形参列表）{方法体}
 *  static、final、abstract来修饰的方法后面讲
 * 3.说明：
 *      3.1权限修饰符：
 *          private\public\protected\缺省 ==》封装性
 *      3.2返回值类型：有返回值 vs 无返回值
 *          3.2.1如果方法有返回值，则必须在方法声明时，指定返回值的类型。同时，方法中需要使用return返回指定类型的数据
 *                 如果方法没有返回值，则方法声明时，使用void来表示。不需要使用return。如果使用的话，智能“return；”表示结束方法。
 *          3.2.2我们定义方法该不该有返回值：
 *                 题目要求、经验
 *      3.3方法名：属于标识符，遵循规范
 *      3.4形参列表：方法可以声明0、1、多个形参
 *          格式：数据类型1 形参1,数据类型2 形参2,。。。。
 *
 * 4.return的使用：
 *      4.1适用范围：使用在方法体内
 *      4.2作用：结束方法；返回指定类型数据。
 *      4.3return关键字后面不可以声明执行语句
 * 5.方法的使用中，可以调用当前类的属性或方法
 *      特殊：方法内调用自己：递归方法
 *      方法中不可以定义方法
 *
 * */
public class demo1 {

}
